{"version":3,"sources":["./src/environments/environment.ts","./src/app/pages/login/login.component.ts","./src/app/pages/login/login.component.html","./src/app/pages/logout/logout.component.ts","./src/app/pages/logout/logout.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/pages/user-data/user-data.component.ts","./src/app/pages/user-data/user-data.component.html","./src/app/pages/register/register.component.ts","./src/app/pages/register/register.component.html","./src/app/services/auth.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase:{\n    apiKey: \"AIzaSyDszLGREIW8rJf6YBRiqlUKbTlMEvqUy-o\",\n    authDomain: \"fir-auth-31d72.firebaseapp.com\",\n    projectId: \"fir-auth-31d72\",\n    storageBucket: \"fir-auth-31d72.appspot.com\",\n    messagingSenderId: \"863818942559\",\n    appId: \"1:863818942559:web:93dd9a989d86dcef8333ea\",\n    measurementId: \"G-RFB42GRMMQ\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\n// import { sign } from 'crypto';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  user:any;\n  password=\"\";\n  email=\"\";\n  // authError:any\n  // data:any\n  constructor(private authser:AuthService,private auth:AngularFireAuth, private router:Router ) { }\n\n Registers(RegInput:NgForm){\n      this.authser.RegisterUser(RegInput.value,RegInput.value.name)\n      } \n\nsigninwithGoogle(){\n  this.authser.loginwithGoogle();\n\n}\nsignIN(){ this.router.navigate(['/register']);\n\n  this.authser.LOGIN(this.email,this.password)\n}\nNewUser(){\n  this.authser.RegisterUser(this.email,this.password)\n}\n\nNewPass(){\n  this.authser.resetpassword('code','newPassword')\n}\n  ngOnInit() {\n    \n    this.authser.LOGIN('email','password');\n    this.authser.RegisterUser('email','password');\n  \n  this.authser.GetUser().snapchanges().subscribe( (action: any)=>{\n    console.log(action);\n    this.user=action\n  })\n  \n  }\n\n}","<p>login works!</p>\n<div class=\"container\">\n  <div class=\"login\">\n    <form (ngSubmit)=\" Registers(RegInput)\" #RegInput=\"ngForm\">\n\n      <!-- <label>Email</label><input type=\"text\" name=\"name\" id=\"name\" ngModel #name=\"ngModel\">\n      <br>\n      <label>Password</label><input type=\"text\" name=\"password\" id=\"pass\" maxlength=\"10\" ngModel #name=\"ngModel\">\n      <br> -->\n\n      Email:<input [(ngModel)]=\"email\" name=\"email\" type=\"text\" /><br>\nPassword:<input [(ngModel)]=\"password\" name=\"password\" type=\"text\" /><br>\n<button routerLink=\"/user-data\"id=\"email\">LOGIN</button>\n     \n      <a class=\"btn1\" href=\"http://localhost:4200/register\">Register New\n        User</a><br>\n\n      <button (click)=\"NewPass()\">Reset Password</button>\n      <p>sign in with Google</p>\n      <button (click)=\"signinwithGoogle()\">sign in with Google</button>\n\n\n    </form>\n\n\n  </div>\n\n\n\n\n</div>\n\n<!-- Email:<input [(ngModel)]=\"email\" name=\"email\" type=\"text\" />\nPassword:<input [(ngModel)]=\"password\" name=\"password\" type=\"text\" />\n -->\n\n<a [routerLink]=\"['/Register'] \" routerLinkActive=\"routerLinkActive\"> \n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.scss']\n})\nexport class LogoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>logout works!</p>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'finalee';\n}\n","<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * The content below * * * * * * * * * * * -->\n<!-- * * * * * * * * * * is only a placeholder * * * * * * * * * * -->\n<!-- * * * * * * * * * * and can be replaced. * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * Delete the template below * * * * * * * * * * -->\n<!-- * * * * * * * to get started with your project! * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './pages/login/login.component';\nimport { RegisterComponent } from './pages/register/register.component';\nimport { LogoutComponent } from './pages/logout/logout.component';\nimport { AuthService } from './services/auth.service';\n\n\nimport{AngularFireAuthModule}from'@angular/fire/auth';\nimport{environment}from'../environments/environment';\nimport { AngularFireModule } from '@angular/fire';\nimport{ FormsModule}from'@angular/forms'\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { UserDataComponent } from './pages/user-data/user-data.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    LogoutComponent,\n    UserDataComponent\n  ],\n  \n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    AngularFireAuthModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    FormsModule,\n    AngularFirestoreModule,\n  \n  ],\n\n  providers: [AuthService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user-data',\n  templateUrl: './user-data.component.html',\n  styleUrls: ['./user-data.component.scss']\n})\nexport class UserDataComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>user-data works!</p>\n<!-- <div class=\"col-12\">\n    <div class=\"row\" *ngIf=\"userde\">\n        \n            {{userde.email}}\n            {{userde.password}}\n        </div>\n\n    </div>\n</div>     -->","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>register here</p>\n\n<div class=\"row mt-4\">\n    <div class=\"col-12\">\n        <a class=\"btn1\" href=\"http://localhost:4200/register\">Register New\n            User</a><br>  <h4>New User Registration</h4>\n\n    </div>\n</div>\n<!-- <div class=\"col-12\">\n    <div class=\"row\" *ngIf=\"authError\">\n        <div class=\"col-12 alert-danger\">\n            {{authError?.message}}\n        </div> -->\n    <!-- </div> -->\n <!-- <form #RegInput=\"ngForm\" (ngSubmit)=\"  Registers(RegInput)\"> \n        <div class=\"row\">\n            <label for=\"fisrtname\">fisrtname</label>\n            <input ngModel #firstname=\"ngModel\" name=\"fisrtname\" type=\"text\">\n        </div> \n        <div class=\"row\">\n            <label for=\"lastname\">lastname</label>\n            <input ngModel #lastname=\"ngModel\" name=\"lastname\" type=\"text\">\n        </div>\n        <div class=\"row\">\n\n            <label for=\"course\">course</label>\n            <input ngModel #course=\"ngModel\" name=\"course\" type=\"text\">\n            <label for=\"contacts\">contacts details</label>\n            <input ngModel #contacts=\"ngModel\" name=\"contacts\" type=\"text\">\n            <label for=\"gender\">Gender</label>\n            <input ngModel #gender=\"ngModel\" name=\"gender\" type=\"dropdownbutton\">\n\n        </div> \n\n\n        <div class=\"row\">\n            <div class=\"col-md-12 mb-2\">\n                <label for=\"email\">email</label>\n                <input ngModel #email=\"ngModel\" name=\"email\" type=\"text\">\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-md-12 mb-2\">\n                <label for=\"password\">password</label>\n                <input ngModel #password=\"ngModel\" name=\"password\" type=\"text\">\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-md-12 mb-2\">\n                <a class=\"btn1\" href=\"http://localhost:4200/login\">submit</a><br>\n               \n            </div>\n        </div>\n\n    </form> -->\n","import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { Router } from '@angular/router';\nimport 'firebase/auth';\n// import { userInfo } from 'os';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\nUser:any;\nauthstate:any=null;\nemail:any\n  \n  \n  constructor(private _fire:AngularFireAuth, private _af:AngularFireAuth,private router : Router ){\n\n  \n    this._af.authState.subscribe(user=>{\n      this.User=user;\n    })\n\n   this._fire.authState.subscribe((auth=>{\n     this.authstate=auth;\n   }\n    ))\n\n  }\n  RegisterUser(email:string,password:string)\n  {\n      this._af.createUserWithEmailAndPassword(email,password).then(user=>{\nconsole.log('successfully registered user')\nthis.authstate=user;\n      }).catch(error=>{\n      console.log(error)\n      throw error\n      \n      })  \n    }\n    loginwithGoogle(){\n\n      let provider= new this.authstate.GoogleAuthProvider();\n      this._af.signInWithPopup(provider).then( ()=>{\n        console.log('login with google')\n      }).catch(err=>{\n        console.log('err',err.message)\n      })\n    }\n\n\nLOGIN(email:string,password: string){\n  this._af.signInWithEmailAndPassword(email,password).catch(error=>console.log(error.code)\n  ).then(res=>console.log(res)).then(res=>{\n    this.router.navigateByUrl('/user-data');\n  })\n    }\n    \nGetUser(){\n  return this.authstate('login')\n}\n \n resetpassword(code:string,newPassword:string){\n  this._af.confirmPasswordReset(code,newPassword).then(()=>{\nconsole.log('successfully reset password')\nalert(\"new password has been reset\")\n  }).catch(err=>{\n    console.log('Err',err.message)\n  }).then(userInfo=>{\n    if (true) {\n      this.router.navigate(['/login'])\n    }\n  })\n}\n   }\n  \n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './pages/login/login.component';\nimport { RegisterComponent } from './pages/register/register.component';\nimport { UserDataComponent } from './pages/user-data/user-data.component';\n\nconst routes: Routes = [  {path:'',redirectTo:'/login',pathMatch:'full'},\n{path:'login',component:LoginComponent},\n{path:'register',component:RegisterComponent},\n\n// path:'user-data',component:UserDataComponent\n// \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}